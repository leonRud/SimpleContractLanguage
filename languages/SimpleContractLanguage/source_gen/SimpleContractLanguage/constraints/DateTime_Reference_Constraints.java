package SimpleContractLanguage.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseScopeProvider;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.scope.Scope;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsContext;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.Arrays;
import jetbrains.mps.scope.ListScope;
import java.util.HashMap;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class DateTime_Reference_Constraints extends BaseConstraintsDescriptor {
  public DateTime_Reference_Constraints() {
    super(CONCEPTS.DateTime_Reference$cx);
  }

  @Override
  protected Map<SReferenceLink, ReferenceConstraintsDescriptor> getSpecifiedReferences() {
    BaseReferenceConstraintsDescriptor d0 = new BaseReferenceConstraintsDescriptor(LINKS.dateTime$y$gL, this, true, false) {
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseScopeProvider() {
          @Override
          public SNodeReference getSearchScopeValidatorNode() {
            return new SNodePointer("r:9e415e95-7194-4344-be96-1ba919ec9b6b(SimpleContractLanguage.constraints)", "5835056846093881244");
          }
          @Override
          public Scope createScope(final ReferenceConstraintsContext _context) {
            Iterable<SNode> Parameters = SNodeOperations.ofConcept(SLinkOperations.getChildren(SNodeOperations.getNodeAncestor(_context.getContextNode(), CONCEPTS.Action$kj, true, false), LINKS.elements$9Xin), CONCEPTS.DateTime$FP);
            Iterable<SNode> fields = Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(SNodeOperations.getNodeAncestor(_context.getContextNode(), CONCEPTS.Contract$IL, true, false), LINKS.variables$zfTx), CONCEPTS.DateTime$FP)).concat(ListSequence.fromList(Arrays.asList(SNodeOperations.getNode("r:328e4212-b98b-457d-bc1a-e80a188720e5(SimpleContractLanguage.Globals)", "4328610595523966633"), SNodeOperations.getNode("r:328e4212-b98b-457d-bc1a-e80a188720e5(SimpleContractLanguage.Globals)", "4328610595523966730"), SNodeOperations.getNode("r:328e4212-b98b-457d-bc1a-e80a188720e5(SimpleContractLanguage.Globals)", "4328610595522157480"))));
            return ListScope.forNamedElements(Sequence.fromIterable(Parameters).concat(Sequence.fromIterable(fields)));
          }
        };
      }
    };
    Map<SReferenceLink, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLink, ReferenceConstraintsDescriptor>();
    references.put(d0.getReference(), d0);
    return references;
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept DateTime_Reference$cx = MetaAdapterFactory.getConcept(0x73e7dd6392b341e4L, 0xb2c2e5cfe1f50f1fL, 0x3c125067151fd807L, "SimpleContractLanguage.structure.DateTime_Reference");
    /*package*/ static final SConcept Action$kj = MetaAdapterFactory.getConcept(0x73e7dd6392b341e4L, 0xb2c2e5cfe1f50f1fL, 0x3a27346aff1ff5fdL, "SimpleContractLanguage.structure.Action");
    /*package*/ static final SConcept DateTime$FP = MetaAdapterFactory.getConcept(0x73e7dd6392b341e4L, 0xb2c2e5cfe1f50f1fL, 0x3c12506715081694L, "SimpleContractLanguage.structure.DateTime");
    /*package*/ static final SConcept Contract$IL = MetaAdapterFactory.getConcept(0x73e7dd6392b341e4L, 0xb2c2e5cfe1f50f1fL, 0x6e2c7874ad4f9743L, "SimpleContractLanguage.structure.Contract");
  }

  private static final class LINKS {
    /*package*/ static final SReferenceLink dateTime$y$gL = MetaAdapterFactory.getReferenceLink(0x73e7dd6392b341e4L, 0xb2c2e5cfe1f50f1fL, 0x3c125067151fd807L, 0x3c125067151fd880L, "dateTime");
    /*package*/ static final SContainmentLink elements$9Xin = MetaAdapterFactory.getContainmentLink(0x73e7dd6392b341e4L, 0xb2c2e5cfe1f50f1fL, 0x3a27346aff1ff5fdL, 0x49702a64e18759c0L, "elements");
    /*package*/ static final SContainmentLink variables$zfTx = MetaAdapterFactory.getContainmentLink(0x73e7dd6392b341e4L, 0xb2c2e5cfe1f50f1fL, 0x6e2c7874ad4f9743L, 0x4b6992bf6a89c526L, "variables");
  }
}
