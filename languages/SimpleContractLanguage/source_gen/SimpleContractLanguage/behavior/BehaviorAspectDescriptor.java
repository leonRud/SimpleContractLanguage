package SimpleContractLanguage.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myParticipantReference__BehaviorDescriptor = new ParticipantReference__BehaviorDescriptor();
  private final BHDescriptor myAction__BehaviorDescriptor = new Action__BehaviorDescriptor();
  private final BHDescriptor myDateTime_Reference__BehaviorDescriptor = new DateTime_Reference__BehaviorDescriptor();
  private final BHDescriptor myInteger_Reference__BehaviorDescriptor = new Integer_Reference__BehaviorDescriptor();
  private final BHDescriptor myTokenTransaction_Reference__BehaviorDescriptor = new TokenTransaction_Reference__BehaviorDescriptor();
  private final BHDescriptor myDuration_Reference__BehaviorDescriptor = new Duration_Reference__BehaviorDescriptor();
  private final BHDescriptor myContract__BehaviorDescriptor = new Contract__BehaviorDescriptor();
  private final BHDescriptor myTransfer__BehaviorDescriptor = new Transfer__BehaviorDescriptor();
  private final BHDescriptor myRequire__BehaviorDescriptor = new Require__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myAction__BehaviorDescriptor;
      case 1:
        return myContract__BehaviorDescriptor;
      case 2:
        return myDateTime_Reference__BehaviorDescriptor;
      case 3:
        return myDuration_Reference__BehaviorDescriptor;
      case 4:
        return myInteger_Reference__BehaviorDescriptor;
      case 5:
        return myParticipantReference__BehaviorDescriptor;
      case 6:
        return myRequire__BehaviorDescriptor;
      case 7:
        return myTokenTransaction_Reference__BehaviorDescriptor;
      case 8:
        return myTransfer__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x73e7dd6392b341e4L, 0xb2c2e5cfe1f50f1fL, 0x3a27346aff1ff5fdL), MetaIdFactory.conceptId(0x73e7dd6392b341e4L, 0xb2c2e5cfe1f50f1fL, 0x6e2c7874ad4f9743L), MetaIdFactory.conceptId(0x73e7dd6392b341e4L, 0xb2c2e5cfe1f50f1fL, 0x3c125067151fd807L), MetaIdFactory.conceptId(0x73e7dd6392b341e4L, 0xb2c2e5cfe1f50f1fL, 0x49702a64e19967b5L), MetaIdFactory.conceptId(0x73e7dd6392b341e4L, 0xb2c2e5cfe1f50f1fL, 0x3c12506715400b6eL), MetaIdFactory.conceptId(0x73e7dd6392b341e4L, 0xb2c2e5cfe1f50f1fL, 0x2dbbedc3a2b95c56L), MetaIdFactory.conceptId(0x73e7dd6392b341e4L, 0xb2c2e5cfe1f50f1fL, 0x7678ff525f597e98L), MetaIdFactory.conceptId(0x73e7dd6392b341e4L, 0xb2c2e5cfe1f50f1fL, 0x49702a64e196179aL), MetaIdFactory.conceptId(0x73e7dd6392b341e4L, 0xb2c2e5cfe1f50f1fL, 0x74e67740044e6ed4L)).seal();
}
